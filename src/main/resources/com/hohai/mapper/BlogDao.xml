<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hohai.dao.BlogDao">

    <resultMap id="blog" type="com.hohai.queryvo.BlogQuery">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="updateTime" column="update_time"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="typeId" column="type_id"/>
        <association property="type" javaType="com.hohai.entity.Type">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <resultMap id="editBlog" type="com.hohai.queryvo.EditBlog">
        <id property="id" column="id"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="typeId" column="type_id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="published" column="published"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <!--    新增博客-->
    <insert id="saveBlog" parameterType="com.hohai.entity.Blog">
        insert into t_blog(id,title, content, first_picture, flag, views, comment_count, appreciation, share_statement, commentabled, published,recommend, create_time, update_time, type_id, user_id, description)
        values (#{id},#{title},#{content},#{firstPicture},#{flag},#{views},#{commentCount},#{appreciation},#{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},#{updateTime},#{typeId},#{userId},#{description});
    </insert>

    <!--    更新博客-->
    <update id="updateBlog" parameterType="com.hohai.queryvo.EditBlog">
        update t_blog set
        published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime}
        where id = #{id};
    </update>

    <!--    根据id删除博客-->
    <delete id="deleteBlog">
        delete from t_blog where id = #{id}
    </delete>

    <!--    分页查询所有博客-->
    <select id="getAllBlogs" resultMap="blog">
        select
        t1.id,
        t1.title,
        t1.update_time,
        t1.recommend,
        t1.published,
        t1.type_id,
        t2.id,
        t2.name
        from t_blog t1 left join t_type t2
        on t1.type_id = t2.id
    </select>

    <!--    根据id查询博客-->
    <select id="findBlogById" resultMap="editBlog">
        select b.id,b.flag,b.title,b.content,b.type_id,
        b.first_picture,b.description,b.recommend,b.published,b.share_statement,
        b.appreciation,b.commentabled from t_blog b  where  b.id = #{id};
    </select>

    <!--    根据分类，标题搜索博客-->
    <select id="searchBlog" resultMap="blog" parameterType="com.hohai.queryvo.SearchBlog">
        <bind name="pattern" value="'%'+title+'%'"/>
        select
        t1.id,
        t1.title,
        t1.update_time,
        t1.recommend,
        -- t1.published,
        t1.type_id,
        t2.id,
        t2.name
        from t_blog t1 , t_type t2
        <where>
            <if test="1==1">
                t1.type_id = t2.id
            </if>
            <if test="typeId!=null">
                and t1.type_id = #{typeId}
            </if>
            <if test="title!=null">
                and t1.title like #{pattern}
            </if>
        </where>
    </select>

    <resultMap id="firstPageBlog" type="com.hohai.queryvo.FirstPageBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="typeName" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <!--    查询博客并展示在首页-->
    <select id="getAllFirstPageBlog" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id order by b.update_time desc
    </select>


    <resultMap id="recommendBlog" type="com.hohai.queryvo.RecommendBlog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="recommend" column="recommend"/>
    </resultMap>


    <!--    查询推荐博客并展示在首页-->
    <select id="getAllRecommendBlog" resultMap="recommendBlog">
        select * from myblog.t_blog where t_blog.recommend = true order by t_blog.update_time desc limit 4;
    </select>

    <!--    首页搜索博客-->
    <select id="indexSearch" parameterType="string" resultMap="firstPageBlog">
        <bind name="pattern" value="'%'+query+'%'"/>
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and u.id = b.user_id and (b.title like #{pattern} or b.content like #{pattern} )
        order by b.update_time desc
    </select>


    <select id="getBlogCount" resultType="java.lang.Integer">
        select count(*) from t_blog
    </select>

    <select id="getViewCount" resultType="java.lang.Integer">
        select sum(views) from t_blog
    </select>

    <select id="getCommentCount" resultType="java.lang.Integer">
        select count(*)  from t_comment
    </select>

    <select id="getMessageCount" resultType="java.lang.Integer">
        select count(*) from t_message
    </select>

    <resultMap id="detailedBlog" type="com.hohai.queryvo.DetailedBlog">
        <id property="id" column="id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="views" column="views"/>
        <result property="commentCount" column="comment_count"/>
        <result property="updateTime" column="update_time"/>
        <result property="commentabled" column="commentabled"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="appreciation" column="appreciation"/>
        <result property="typeName" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
    </resultMap>

    <select id="getBlogDetailById" resultMap="detailedBlog">
        select b.id,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation,t.name,u.nickname,u.avatar
        from t_blog b,t_type t,t_user u
        where b.user_id = u.id and b.type_id = t.id and b.id = #{id}
    </select>


    <select id="getBlogByTypeId" resultMap="firstPageBlog">
        select b.id,b.title,b.first_picture, b.views, b.comment_count,b.update_time,b.description,
        t.name ,
        u.nickname, u.avatar
        from myblog.t_blog b, myblog.t_type t,myblog.t_user u
        where b.type_id = t.id and  u.id = b.user_id and b.type_id=#{typeId} order by b.update_time desc
    </select>

    <update id="updateViews">
        update t_blog set views = views+1 where id=#{id}
    </update>

    <update id="updateCommentCount">
        update t_blog b set comment_count = (
            select count(*) from t_comment c where c.blog_id=#{id} and b.id=#{id}
        ) where id = #{id}
    </update>

</mapper>